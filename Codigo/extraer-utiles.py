import os
import shutil
import yara

def compilar_y_copiar(origen, destino_originales):
    try:
        # Compilar las reglas YARA
        rules = yara.compile(filepath=origen)

        # Obtener el nombre del archivo original sin la extensión
        nombre_archivo = os.path.splitext(os.path.basename(origen))[0]

        # Guardar las reglas compiladas
        destino_compilado = os.path.join(os.path.dirname(origen), f"{nombre_archivo}.compiled")
        rules.save(destino_compilado)
        print(f"Compilación exitosa: {origen} -> {destino_compilado}")

        # Copiar el archivo original al directorio de archivos originales
        shutil.copy2(origen, destino_originales)

        # Eliminar el archivo compilado
        os.remove(destino_compilado)

    except yara.SyntaxError as e:
        # Si hay un error de sintaxis, imprimir el mensaje de error
        print(f"Error de compilación en {origen}: {e}")

# Directorio de origen (donde se encuentran los archivos .yar)
directorio_origen = "/home/cape/Desktop/Ejercicio_1/repositorios/malpedia"

# Directorio de salida para archivos originales compilados sin errores
directorio_originales = "/home/cape/Desktop/Ejercicio_1/repositorios/pruebamalpedia"

# Crear el directorio de salida si no existe
if not os.path.exists(directorio_originales):
    os.makedirs(directorio_originales)

# Iterar sobre archivos en el directorio de origen
for filename in os.listdir(directorio_origen):
    if filename.endswith(".yar") or filename.endswith(".yara"):
        ruta_origen = os.path.join(directorio_origen, filename)
        compilar_y_copiar(ruta_origen, directorio_originales)